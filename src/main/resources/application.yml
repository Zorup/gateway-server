# 공통

server:
  port: 8081

jwt:
  secret: 2021!!ZorupMSA

spring:
  profiles:
    active: local   # 프로파일 지정 없으면 디폴트로 local 사용
  cloud:
    gateway:
      default-filters:
        - name: JwtRequestFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
      # CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - OPTIONS
              - DELETE
              - PATCH
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allow-credentials: true # 쿠키, 인증헤더 허용

---

# 로컬 IDE기반 개발용 프로파일
spring:
  config:
    activate:
      on-profile: local
  cloud:
    gateway:
      routes:
        - id: post-svc
          uri: http://localhost:8082/
          predicates:
            - Path=/main/**
          filters:
            - RewritePath=/main/(?<segment>.*), /$\{segment}
            - name: PostFilter
              args:
                baseMessage: Spring Cloud Gateway PostFilter
                preLogger: true
                postLogger: true
        - id: chat-ws-svc
          uri: ws://localhost:8083/
          predicates:
            - Path=/chat/chat-conn/**
          filters:
            - RewritePath=/chat/(?<segment>.*), /$\{segment}
            - name: ChatMessageFilter
              args:
                baseMessage: Sprint Cloud Gateway ChatMessageFilter
                preLogger: true
                postLogger: true
        - id: chat-http-svc
          uri: http://localhost:8083/
          predicates:
            - Path=/chat/**
          filters:
            - RewritePath=/chat/(?<segment>.*), /$\{segment}
            - name: ChatFilter
              args:
                baseMessage: Sprint Cloud Gateway ChatFilter
                preLogger: true
                postLogger: true
        - id: fcm-svc
          uri: http://localhost:8084/
          predicates:
            - Path=/fcm/**
          filters:
            - RewritePath=/fcm/(?<segment>.*), /$\{segment}
        - id: auth-svc
          uri: http://localhost:8085/
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
            - name: AuthFilter
              args:
                baseMessage: Sprint Cloud Gateway AuthFilter
                preLogger: true
                postLogger: true

---

## 로컬에서 도커로 띄워놓을때 사용하는 프로파일
spring:
  config:
    activate:
      on-profile: local-docker
  cloud:
    gateway:
      routes:
        - id: post-svc
          uri: http://host.docker.internal:8082/
          predicates:
            - Path=/main/**
          filters:
            - RewritePath=/main/(?<segment>.*), /$\{segment}
            - name: PostFilter
              args:
                baseMessage: Spring Cloud Gateway PostFilter
                preLogger: true
                postLogger: true
        - id: chat-ws-svc
          uri: ws://host.docker.internal:8083/
          predicates:
            - Path=/chat/chat-conn/**
          filters:
            - RewritePath=/chat/(?<segment>.*), /$\{segment}
            - name: ChatMessageFilter
              args:
                baseMessage: Sprint Cloud Gateway ChatMessageFilter
                preLogger: true
                postLogger: true
        - id: chat-http-svc
          uri: http://host.docker.internal:8083/
          predicates:
            - Path=/chat/**
          filters:
            - RewritePath=/chat/(?<segment>.*), /$\{segment}
            - name: ChatFilter
              args:
                baseMessage: Sprint Cloud Gateway ChatFilter
                preLogger: true
                postLogger: true
        - id: fcm-svc
          uri: http://host.docker.internal:8084/
          predicates:
            - Path=/fcm/**
          filters:
            - RewritePath=/fcm/(?<segment>.*), /$\{segment}
        - id: auth-svc
          uri: http://localhost:8085/
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
            - name: AuthFilter
              args:
                baseMessage: Sprint Cloud Gateway AuthFilter
                preLogger: true
                postLogger: true
